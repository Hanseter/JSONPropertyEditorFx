{
  "title": "completeValidationTest",
  "$schema": "http://json-schema.org/draft-07/schema",
  "properties": {
    "strings": {
      "type": "object",
      "properties": {
        "req": {
          "type": "string",
          "description": "A required String."
        },
        "nullable": {
          "type": [
            "string",
            "null"
          ],
          "description": "An optional, but explicitly nullable String."
        },
        "reqNullable": {
          "type": [
            "string",
            "null"
          ],
          "description": "A required, but explicitly nullable String."
        },
        "minLength": {
          "type": "string",
          "minLength": 3,
          "description": "A String with a minimum length of 3."
        },
        "maxLength": {
          "type": "string",
          "maxLength": 6
        },
        "minMaxLength": {
          "type": "string",
          "minLength": 3,
          "maxLength": 6
        },
        "pattern": {
          "type": "string",
          "pattern": "foo.+bar"
        },
        "minMaxPattern": {
          "type": "string",
          "minLength": 3,
          "maxLength": 8,
          "pattern": "foo.+bar"
        },
        "formats": {
          "type": "object",
          "properties": {
            "date-time": {
              "type": "string",
              "format": "date-time"
            },
            "time": {
              "type": "string",
              "format": "time"
            },
            "date": {
              "type": "string",
              "format": "date"
            },
            "email": {
              "type": "string",
              "format": "email"
            },
            "idn-email": {
              "type": "string",
              "format": "idn-email"
            },
            "hostname": {
              "type": "string",
              "format": "hostname"
            },
            "idn-hostname": {
              "type": "string",
              "format": "idn-hostname"
            },
            "ipv4": {
              "type": "string",
              "format": "ipv4"
            },
            "ipv6": {
              "type": "string",
              "format": "ipv6"
            },
            "uri": {
              "type": "string",
              "format": "uri"
            },
            "uri-reference": {
              "type": "string",
              "format": "uri-reference"
            },
            "iri": {
              "type": "string",
              "format": "iri"
            },
            "iri-reference": {
              "type": "string",
              "format": "iri-reference"
            },
            "uri-template": {
              "type": "string",
              "format": "uri-template"
            },
            "json-pointer": {
              "type": "string",
              "format": "json-pointer"
            },
            "relative-json-pointer": {
              "type": "string",
              "format": "relative-json-pointer"
            },
            "regex": {
              "type": "string",
              "format": "regex"
            }
          }
        }
      },
      "required": [
        "req",
        "reqNullable"
      ]
    },
    "integers": {
      "type": "object",
      "properties": {
        "multipleOf": {
          "type": "integer",
          "multipleOf": 3
        },
        "minimum": {
          "type": "integer",
          "minimum": 3
        },
        "exclusiveMinimum": {
          "type": "integer",
          "exclusiveMinimum": 3
        },
        "maximum": {
          "type": "integer",
          "maximum": 6
        },
        "exclusiveMaximum": {
          "type": "integer",
          "exclusiveMaximum": 6
        }
      }
    },
    "numbers": {
      "type": "object",
      "properties": {
        "multipleOf": {
          "type": "number",
          "multipleOf": 3
        },
        "minimum": {
          "type": "number",
          "minimum": 3
        },
        "exclusiveMinimum": {
          "type": "number",
          "exclusiveMinimum": 3
        },
        "maximum": {
          "type": "number",
          "maximum": 6
        },
        "exclusiveMaximum": {
          "type": "number",
          "exclusiveMaximum": 6
        }
      }
    },
    "lists": {
      "type": "object",
      "properties": {
        "minItems": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 3
        },
        "maxItems": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 6
        },
        "uniqueItems": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "childValidation": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 3
          }
        }
      }
    },
    "tuples": {
      "type": "object",
      "properties": {
        "3ints": {
          "type": "array",
          "items": [
            {
              "type": "integer"
            },
            {
              "type": "integer"
            },
            {
              "type": "integer"
            }
          ]
        }
      }
    },
    "id-references": {
      "type": "object",
      "properties": {
        "pattern": {
          "type": "string",
          "format": "id-reference",
          "pattern": "G.+"
        }
      }
    },
    "allOfs": {
      "type": "object",
      "properties": {
        "optional": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "a": {
                  "type": "string"
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "b": {
                  "type": "string"
                }
              }
            }
          ]
        },
        "required": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "a": {
                  "type": "string"
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "b": {
                  "type": "string"
                }
              }
            }
          ]
        }
      },
      "required": [
        "required"
      ]
    },
    "oneOfs": {
      "type": "object",
      "properties": {
        "optional": {
          "oneOf": [
            {
              "type": "string",
              "title": "String value"
            },
            {
              "type": "boolean",
              "title": "Boolean value"
            }
          ]
        },
        "required": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ]
        }
      },
      "required": [
        "required"
      ]
    },
    "booleans": {
      "type": "object",
      "properties": {
        "optional": {
          "type": "boolean"
        },
        "readOnlyButNullable": {
          "type": [
            "boolean",
            "null"
          ],
          "readOnly": true
        },
        "required": {
          "type": "boolean"
        },
        "requiredButNullable": {
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "required": [
        "required",
        "requiredButNullable"
      ]
    },
    "enums": {
      "type": "object",
      "properties": {
        "required": {
          "type": "string",
          "enum": [
            "foo",
            "bar",
            "baz"
          ]
        },
        "optional": {
          "type": "string",
          "enum": [
            "foo",
            "bar",
            "baz"
          ]
        },
        "default": {
          "type": "string",
          "enum": [
            "foo",
            "bar",
            "baz"
          ],
          "default": "bar"
        },
        "nullable": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "foo",
            "bar",
            "baz",
            null
          ]
        },
        "nullableDefault": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "foo",
            "bar",
            "baz",
            null
          ],
          "default": "bar"
        },
        "withDesc": {
          "type": "string",
          "enum": [
            "foo",
            "bar",
            "baz"
          ],
          "enumDescriptions": [
            "the fooest of them all",
            "the barest of them all",
            "the bazest of them all"
          ],
          "default": "baz"
        },
        "withDescRo": {
          "type": "string",
          "enum": [
            "foo",
            "bar",
            "baz"
          ],
          "enumDescriptions": [
            "the fooest of them all",
            "the barest of them all",
            "the bazest of them all"
          ],
          "default": "baz",
          "readOnly": true
        }
      },
      "required": [
        "required"
      ]
    },
    "withValidation": {
      "type": "object",
      "properties": {
        "withNot": {
          "styleClass": "a-style-class",
          "type": "number",
          "not": {
            "const": 5.0
          }
        },
        "intWithNot": {
          "type": "integer",
          "not": {
            "const": 5
          }
        },
        "withIf": {
          "type": "string",
          "if": {
            "pattern": "^foo"
          },
          "then": {
            "pattern": ".*bar.*"
          }
        },
        "withComplexIf": {
          "properties": {
            "a": {
              "type": "string"
            },
            "b": {
              "type": "string"
            }
          },
          "if": {
            "properties": {
              "a": {
                "const": "foo"
              }
            }
          },
          "then": {
            "properties": {
              "b": {
                "pattern": ".*bar.*"
              }
            }
          },
          "else": {
            "properties": {
              "b": {
                "pattern": ".*baz.*"
              }
            }
          }
        },
        "alwaysValidates": {
          "anyOf": [
            {
              "type": "string",
              "pattern": "foo"
            },
            true
          ]
        }
      },
      "required": [
        "withNot"
      ]
    }
  },
  "required": [
    "allOfs",
    "oneOfs",
    "id-references",
    "lists",
    "tuples",
    "integers",
    "numbers",
    "strings",
    "booleans",
    "enums",
    "withValidation"
  ],
  "order": [
    "booleans",
    "allOfs",
    "enums",
    "id-references",
    "integers",
    "lists",
    "tuples",
    "numbers",
    "oneOfs",
    "strings",
    "withValidation"
  ]
}